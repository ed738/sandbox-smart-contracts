name: CI
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Linting
        run: yarn lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Formatting
        run: yarn format

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Running tests
        run: yarn test

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Running coverage
        run: yarn coverage

      - name: Report coverage
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enforce coverage
        uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          path: ./coverage/lcov.info
          min_coverage: 80

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Deploy contracts
        run: yarn void:deploy

      - name: Fork Deploy contracts from rinkeby
        run: yarn fork:deploy rinkeby
        env:
          ETH_NODE_URI_RINKEBY: ${{ secrets.ETH_NODE_URI_RINKEBY }}

  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.22.1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Create symbolic links
        run: ln -s ./node_modules/@openzeppelin/ "@openzeppelin"

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: asset.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/asset'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: bundleSandSale.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/bundleSandSale'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: catalyst.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/catalyst'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: defi.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/defi'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: faucet.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/faucet'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: game.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/Game'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: permit.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/permit'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: child.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/polygon/child'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: root.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/polygon/root'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: raffle.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/raffle'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: sand.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/Sand'

      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 12.22.1
          sarif: utils.sarif
          slither-config: ./slither.config.json
          target: 'src/solc_0.8/Utils'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ./
